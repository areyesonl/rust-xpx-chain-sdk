use crate::models::config_dto::ConfigDto;
use crate::models::uint_64::Uint64Dto;

#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkConfigDto {
    #[serde(rename = "networkConfig")]
    pub network_config: ConfigDto,
}

#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkConfigBodyDto {
    #[serde(rename = "applyHeightDelta")]
    pub apply_height_delta: Uint64Dto,
    /// Network config like a raw text.
    #[serde(rename = "networkConfig")]
    pub network_config: String,
    /// Allowed versions of transaction in json format.
    #[serde(rename = "supportedEntityVersions")]
    pub supported_entity_versions: String,
}

impl NetworkConfigBodyDto {
    pub fn new(apply_height_delta: Uint64Dto, network_config: String, supported_entity_versions: String) -> Self {
        NetworkConfigBodyDto {
            apply_height_delta,
            network_config,
            supported_entity_versions,
        }
    }
}

/// NetworkConfigTransactionDto : Transaction that updates config.
#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct NetworkConfigTransactionDto {
    /// The signature of the entity. The signature was generated by the signer and can be used to validate tha the entity data was not modified by a node.
    #[serde(rename = "signature")]
    pub signature: String,
    /// The public key of the entity signer formatted as hexadecimal.
    #[serde(rename = "signer")]
    pub signer: String,
    /// The entity version. The higher byte represents the network identifier: * 0x68 (MAIN_NET) - PUBLIC main network. * 0x98 (TEST_NET) - PUBLIC test network. * 0x60 (MIJIN) - PRIVATE network. * 0x90 (MIJIN_TEST) - PRIVATE test network.
    #[serde(rename = "version")]
    pub version: i32,
    #[serde(rename = "type")]
    pub _type: u16,
    #[serde(rename = "max_fee")]
    pub max_fee: Uint64Dto,
    #[serde(rename = "deadline")]
    pub deadline: Uint64Dto,
    #[serde(rename = "applyHeightDelta")]
    pub apply_height_delta: Uint64Dto,
    /// Network config like a raw text.
    #[serde(rename = "networkConfig")]
    pub network_config: String,
    /// Allowed versions of transaction in json format.
    #[serde(rename = "supportedEntityVersions")]
    pub supported_entity_versions: String,
}

#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct EmbeddedNetworkConfigTransactionDto {
    /// The public key of the entity signer formatted as hexadecimal.
    #[serde(rename = "signer")]
    pub signer: String,
    /// The entity version. The higher byte represents the network identifier: * 0x68 (MAIN_NET) - PUBLIC main network. * 0x98 (TEST_NET) - PUBLIC test network. * 0x60 (MIJIN) - PRIVATE network. * 0x90 (MIJIN_TEST) - PRIVATE test network.
    #[serde(rename = "version")]
    pub version: i32,
    #[serde(rename = "type")]
    pub _type: u16,
    #[serde(rename = "max_fee")]
    pub max_fee: Uint64Dto,
    #[serde(rename = "deadline")]
    pub deadline: Uint64Dto,
    #[serde(rename = "applyHeightDelta")]
    pub apply_height_delta: Uint64Dto,
    /// Network config like a raw text.
    #[serde(rename = "networkConfig")]
    pub network_config: String,
    /// Allowed versions of transaction in json format.
    #[serde(rename = "supportedEntityVersions")]
    pub supported_entity_versions: String,
}
