#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct EmbeddedTransactionInfoDto {
    #[serde(rename = "meta")]
    pub meta: crate::models::EmbeddedTransactionMetaDto,
    #[serde(rename = "transaction")]
    pub transaction: crate::models::AnyOfEmbeddedBlockchainUpgradeTransactionDtoEmbeddedNetworkConfigTransactionDtoEmbeddedAddressMetadataTransactionDtoEmbeddedMosaicMetadataTransactionDtoEmbeddedNamespaceMetadataTransactionDtoEmbeddedMosaicDefinitionTransactionDtoEmbeddedMosaicSupplyChangeTransactionDtoEmbeddedRegisterNamespaceTransactionDtoEmbeddedAddressAliasTransactionDtoEmbeddedMosaicAliasTransactionDtoEmbeddedTransferTransactionDtoEmbeddedModifyMultisigAccountTransactionDtoEmbeddedHashLockTransactionDtoEmbeddedAccountPropertiesTransactionDtoEmbeddedSecretLockTransactionDtoEmbeddedSecretProofTransactionDtoEmbeddedAccountLinkTransactionDto,
}

impl EmbeddedTransactionInfoDto {
    pub fn new(meta: crate::models::EmbeddedTransactionMetaDto, transaction: crate::models::AnyOfEmbeddedBlockchainUpgradeTransactionDtoEmbeddedNetworkConfigTransactionDtoEmbeddedAddressMetadataTransactionDtoEmbeddedMosaicMetadataTransactionDtoEmbeddedNamespaceMetadataTransactionDtoEmbeddedMosaicDefinitionTransactionDtoEmbeddedMosaicSupplyChangeTransactionDtoEmbeddedRegisterNamespaceTransactionDtoEmbeddedAddressAliasTransactionDtoEmbeddedMosaicAliasTransactionDtoEmbeddedTransferTransactionDtoEmbeddedModifyMultisigAccountTransactionDtoEmbeddedHashLockTransactionDtoEmbeddedAccountPropertiesTransactionDtoEmbeddedSecretLockTransactionDtoEmbeddedSecretProofTransactionDtoEmbeddedAccountLinkTransactionDto) -> EmbeddedTransactionInfoDto {
        EmbeddedTransactionInfoDto {
            meta,
            transaction,
        }
    }
}


