#[derive(Debug, PartialEq, Serialize, Deserialize)]
pub struct Cosignature {
    /// The hash of parent aggregate transaction that has been signed by a cosignatory of the transaction.
    #[serde(rename = "parentHash", skip_serializing_if = "Option::is_none")]
    pub parent_hash: Option<String>,
    /// The signatures generated by signing the parent aggregate transaction hash.
    #[serde(rename = "signature", skip_serializing_if = "Option::is_none")]
    pub signature: Option<String>,
    /// The signer of the transaction.
    #[serde(rename = "signer", skip_serializing_if = "Option::is_none")]
    pub signer: Option<String>,
}

impl Cosignature {
    pub fn new() -> Cosignature {
        Cosignature {
            parent_hash: None,
            signature: None,
            signer: None,
        }
    }
}


